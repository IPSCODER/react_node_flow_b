{"ast":null,"code":"var _s = $RefreshSig$();\n// useForm.ts\nimport { useState } from 'react';\nconst useForm = ({\n  initialValues,\n  validationSchema\n}) => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: undefined\n      }));\n    }\n  };\n  const handleAutocompleteChange = name => (event, value) => {\n    setValues(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: undefined\n      }));\n    }\n  };\n  const handleCheckboxChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setValues(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n  };\n  const validate = async () => {\n    if (validationSchema) {\n      try {\n        await validationSchema.validate(values, {\n          abortEarly: false\n        });\n      } catch (error) {\n        const newErrors = {};\n        error.inner.forEach(err => {\n          newErrors[err.path] = err.message;\n        });\n        setErrors(newErrors);\n        throw newErrors; // Re-throw for the caller to handle if needed\n      }\n    }\n  };\n  return {\n    values,\n    errors,\n    handleChange,\n    handleAutocompleteChange,\n    handleCheckboxChange,\n    validate,\n    setValues\n  };\n};\n_s(useForm, \"n1PFYgq5JtbzkIsmPbSRLOOcfKE=\");\nexport default useForm;","map":{"version":3,"names":["useState","useForm","initialValues","validationSchema","_s","values","setValues","errors","setErrors","handleChange","e","name","value","target","prev","undefined","handleAutocompleteChange","event","handleCheckboxChange","checked","validate","abortEarly","error","newErrors","inner","forEach","err","path","message"],"sources":["/home/pravin/react/react_node_flow/client/src/hooks/useForm.ts"],"sourcesContent":["// useForm.ts\nimport { useState } from 'react';\n\ninterface UseFormProps<T> {\n  initialValues: T;\n  validationSchema?: any; // You can specify your Yup validation schema here\n}\n\nconst useForm = <T>({ initialValues, validationSchema }: UseFormProps<T>) => {\n  const [values, setValues] = useState<any>(initialValues);\n  const [errors, setErrors] = useState<Partial<Record<keyof T, string | undefined>> | any>({});\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setValues((prev: any) => ({ ...prev, [name]: value }));\n\n    if (errors[name]) {\n      setErrors((prev: any) => ({ ...prev, [name]: undefined }));\n    }\n  };\n\n  const handleAutocompleteChange = (name: keyof T) => (event: React.SyntheticEvent, value: any) => {\n    setValues((prev: any) => ({ ...prev, [name]: value }));\n\n    if (errors[name]) {\n      setErrors((prev: any) => ({ ...prev, [name]: undefined }));\n    }\n  };\n\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    setValues((prev: any) => ({ ...prev, [name]: checked }));\n  };\n\n  const validate = async () => {\n    if (validationSchema) {\n      try {\n        await validationSchema.validate(values, { abortEarly: false });\n      } catch (error: any) {\n        const newErrors: any = {};\n        error.inner.forEach((err: any) => {\n          newErrors[err.path] = err.message;\n        });\n        setErrors(newErrors);\n        throw newErrors; // Re-throw for the caller to handle if needed\n      }\n    }\n  };\n\n  return {\n    values,\n    errors,\n    handleChange,\n    handleAutocompleteChange,\n    handleCheckboxChange,\n    validate,\n    setValues,\n  };\n};\n\nexport default useForm;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAOhC,MAAMC,OAAO,GAAGA,CAAI;EAAEC,aAAa;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAME,aAAa,CAAC;EACxD,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAqD,CAAC,CAAC,CAAC;EAE5F,MAAMS,YAAY,GAAIC,CAA4D,IAAK;IACrF,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,SAAS,CAAEQ,IAAS,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IAEtD,IAAIL,MAAM,CAACI,IAAI,CAAC,EAAE;MAChBH,SAAS,CAAEM,IAAS,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,IAAI,GAAGI;MAAU,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;EAED,MAAMC,wBAAwB,GAAIL,IAAa,IAAK,CAACM,KAA2B,EAAEL,KAAU,KAAK;IAC/FN,SAAS,CAAEQ,IAAS,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IAEtD,IAAIL,MAAM,CAACI,IAAI,CAAC,EAAE;MAChBH,SAAS,CAAEM,IAAS,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,IAAI,GAAGI;MAAU,CAAC,CAAC,CAAC;IAC5D;EACF,CAAC;EAED,MAAMG,oBAAoB,GAAIR,CAAsC,IAAK;IACvE,MAAM;MAAEC,IAAI;MAAEQ;IAAQ,CAAC,GAAGT,CAAC,CAACG,MAAM;IAClCP,SAAS,CAAEQ,IAAS,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGQ;IAAQ,CAAC,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAIjB,gBAAgB,EAAE;MACpB,IAAI;QACF,MAAMA,gBAAgB,CAACiB,QAAQ,CAACf,MAAM,EAAE;UAAEgB,UAAU,EAAE;QAAM,CAAC,CAAC;MAChE,CAAC,CAAC,OAAOC,KAAU,EAAE;QACnB,MAAMC,SAAc,GAAG,CAAC,CAAC;QACzBD,KAAK,CAACE,KAAK,CAACC,OAAO,CAAEC,GAAQ,IAAK;UAChCH,SAAS,CAACG,GAAG,CAACC,IAAI,CAAC,GAAGD,GAAG,CAACE,OAAO;QACnC,CAAC,CAAC;QACFpB,SAAS,CAACe,SAAS,CAAC;QACpB,MAAMA,SAAS,CAAC,CAAC;MACnB;IACF;EACF,CAAC;EAED,OAAO;IACLlB,MAAM;IACNE,MAAM;IACNE,YAAY;IACZO,wBAAwB;IACxBE,oBAAoB;IACpBE,QAAQ;IACRd;EACF,CAAC;AACH,CAAC;AAACF,EAAA,CAlDIH,OAAO;AAoDb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}